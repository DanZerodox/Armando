[{"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\index.js":"1","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\App.js":"2","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\reportWebVitals.js":"3","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Inicio.js":"4","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\FormularioWeb.js":"5","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\FormularioMovil.js":"6","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Admnistrador.js":"7","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Editar.js":"8","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Agregar.js":"9","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Map.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":724,"mtime":1612826503235,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":756,"mtime":1612409559824,"results":"15","hashOfConfig":"12"},{"size":22201,"mtime":1615420796473,"results":"16","hashOfConfig":"12"},{"size":12131,"mtime":1615481034691,"results":"17","hashOfConfig":"12"},{"size":16546,"mtime":1613687038006,"results":"18","hashOfConfig":"12"},{"size":33756,"mtime":1615480852906,"results":"19","hashOfConfig":"12"},{"size":24486,"mtime":1615480906654,"results":"20","hashOfConfig":"12"},{"size":24730,"mtime":1614900060421,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"kuy542",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\index.js",[],["46","47"],"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\App.js",["48","49","50"],"import logo from './logo.svg';\nimport './App.css';\nimport { Inicio } from './Inicio';\nimport { Admnistrador } from './Admnistrador';\nimport { Editar } from './Editar';\nimport { Agregar } from './Agregar';\n\nimport { BrowserRouter, Route, Link, HashRouter } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Route path=\"/\" exact={true} component={Inicio}></Route>\n        <Route path=\"/administrador\" exact={true} component={Admnistrador}></Route>\n        <Route path=\"/editar/:id\" exact={true} component={Editar}></Route>\n        <Route path=\"/agregar\" exact={true} component={Agregar}></Route>\n\n      </HashRouter>\n\n      {/* <Inicio></Inicio> */}\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\reportWebVitals.js",[],"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Inicio.js",[],"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\FormularioWeb.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72"],"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\FormularioMovil.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Admnistrador.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React from 'react';\r\n// import Button from 'react-bootstrap/Button';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport home from './images/inicio.png';\r\nimport perfil from './images/perfil.png';\r\nimport whats from './images/whats.PNG';\r\nimport outlook from './images/outlook.PNG';\r\nimport telmex from './images/telmex.PNG';\r\nimport telmex2 from './images/telmex2.PNG';\r\nimport casetel from './images/case.PNG';\r\nimport telefono from './images/telefono.PNG';\r\nimport lector from './images/lector.PNG';\r\nimport Button from '@material-ui/core/Button';\r\nimport cobre from './images/cobre.PNG';\r\nimport libro from './images/libro.PNG';\r\nimport ubicacion from './images/ubicacion.PNG';\r\nimport grupojumex from './images/grupojumex.PNG';\r\nimport Swal from 'sweetalert2'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport editar from './images/editar.png';\r\nimport eliminar from './images/eliminar.png';\r\nimport conserv from './images/conservlogo.png';\r\nimport add from './images/agregar.png';\r\n\r\n// import Menu from '@material-ui/core/Menu';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\nimport {\r\n    Menu,\r\n    MenuItem,\r\n    MenuButton\r\n} from '@szhsin/react-menu';\r\nimport '@szhsin/react-menu/dist/index.css';\r\nimport { BrowserRouter, Route, Link, Redirect } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\n\r\n\r\n\r\nexport class Admnistrador extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            buscar: '',\r\n            perfil: '',\r\n            whatsapp: '',\r\n            outlook: '',\r\n            telmexi1: '',\r\n            telmexi2: '',\r\n            telmexi3: '',\r\n            telmexi4: '',\r\n            telemxv1: '',\r\n            telemxv2: '',\r\n            telemxv3: '',\r\n            telemxv4: '',\r\n            case: '',\r\n            tel: '',\r\n            lec: '',\r\n            fibra: '',\r\n            lib: '',\r\n            tel2: '',\r\n            lec2: '',\r\n            ubi: '',\r\n            responsable: '',\r\n            contacto: '',\r\n            correo: '',\r\n            cas: '',\r\n            cascontact: '',\r\n            velocidad: '',\r\n            tipo: '',\r\n            observacion: '',\r\n            direccion: '',\r\n            cedis: [],\r\n            velocidadde: '',\r\n            contactocare: '',\r\n            show: false,\r\n            usuario: '',\r\n            contraseña: '',\r\n            mostrarerror: false,\r\n            mensajeerror: '',\r\n            mostrarnombre: false,\r\n            nombreadmin: '',\r\n            openmenu: false,\r\n            mostrarTabla: false,\r\n            editar: [],\r\n            cd: '',\r\n            redirect_cerrar:false\r\n\r\n        }\r\n\r\n        this.handleChangeBuscar = this.handleChangeBuscar.bind(this);\r\n        this.handleContraseña = this.handleContraseña.bind(this);\r\n        this.handleUsuario = this.handleUsuario.bind(this);\r\n\r\n    }\r\n    handleChangeBuscar(event) {\r\n        this.setState({ buscar: event.target.value }, () => {\r\n            this.LlenarCampos();\r\n        })\r\n    }\r\n    handleContraseña(event) {\r\n        this.setState({ contraseña: event.target.value }, () => {\r\n        })\r\n    }\r\n    handleUsuario(event) {\r\n        this.setState({ usuario: event.target.value }, () => {\r\n        })\r\n    }\r\n    DatatablePage = () => {\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const filas = [];\r\n        this.state.cedis.forEach(item => {\r\n            filas.push({\r\n                Id: item.Id,\r\n                CD: item.CD,\r\n                Direccion: item.Direccion,\r\n                Responsable: item.Responsable,\r\n                Contacto: item.Contacto,\r\n                Correo: item.Correo,\r\n                editar: <Link to={'/editar/' + item.Id}><img src={editar} width='28px'></img></Link>,\r\n                eliminar: <img src={eliminar} width='28px' onClick={() => this.EliminarCD(item.Id)}></img>\r\n            })\r\n        })\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'Id',\r\n                    sort: 'asc',\r\n                    width: 150\r\n                },\r\n                {\r\n                    label: 'CD',\r\n                    field: 'CD',\r\n                    sort: 'asc',\r\n                    width: 270\r\n                },\r\n                {\r\n                    label: 'Direccion',\r\n                    field: 'Direccion',\r\n                    sort: 'asc',\r\n                    width: 200\r\n                },\r\n                {\r\n                    label: 'Responsable',\r\n                    field: 'Responsable',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                },\r\n                {\r\n                    label: 'Contacto',\r\n                    field: 'Contacto',\r\n                    sort: 'asc',\r\n                    width: 150\r\n                },\r\n                {\r\n                    label: 'Correo',\r\n                    field: 'Correo',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                },\r\n                {\r\n                    label: 'Editar',\r\n                    field: 'editar',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                },\r\n                {\r\n                    label: 'Eliminar',\r\n                    field: 'eliminar',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                },\r\n\r\n            ],\r\n\r\n            rows: filas\r\n\r\n\r\n        };\r\n        return (\r\n            this.state.mostrarTabla === true ?\r\n                <>\r\n                    <Modal show={this.state.show} onHide={() => this.CerrarModal()} style={{ marginTop: 125 }}>\r\n                        <>\r\n                            <Modal.Header closeButton>\r\n                                <h5>Editar Registro {this.state.cd}</h5>\r\n                            </Modal.Header>\r\n                            <Modal.Body style={{ padding: '0 10px' }}>\r\n                                <Row>\r\n                                    <Col sm={3}>\r\n                                        <label>CD</label>\r\n                                        <input value={this.state.cd}></input>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button variant=\"contained\" style={{ width: '100%', backgroundColor: 'red' }} onClick={() => this.IniciarSesion()} >Ingresar</Button>\r\n                                <br></br>\r\n                            </Modal.Body>\r\n                        </>\r\n                    </Modal>\r\n                    <Jumbotron style={{ marginLeft: 'auto', marginRight: 'auto', width: '90%', backgroundColor: 'white', marginTop: '-52px', marginBottom: 'auto' }}>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Link to={'/'}>\r\n                                    <img src={conserv} style={{ width: 150, float: 'left' }}></img>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col sm={3}>\r\n                                <h4 style={{ marginTop: 22 }}>CD Registrados</h4>\r\n                            </Col>\r\n                            <Col sm={3} style={{ textAlign: 'end' }}>\r\n                                {this.state.mostrarnombre === false ?\r\n                                    <a href=\"#\" onClick={() => this.AbrirModal()}>Iniciar Sesión</a>\r\n                                    :\r\n                                    // <h8>{this.state.nombreadmin}</h8>\r\n                                    <div style={{ float: 'right', position: 'relative', top: '-24px', height: 10 }}>\r\n                                        <Menu menuButton={<MenuButton >{this.state.nombreadmin}</MenuButton>}>\r\n                                            <MenuItem><Link to={'/'}>Inicio</Link></MenuItem>\r\n                                            <MenuItem onClick={() => this.CerrarSesion()}>Cerrar Sesión</MenuItem>\r\n                                        </Menu>\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12}>\r\n                                <div style={{height:64}}>\r\n                                    <Link to={'/agregar'} style={{ position: 'relative', top: 25 }}>\r\n                                        <img src={add} style={{ width: 120 }}></img>\r\n                                    </Link>\r\n                                </div>\r\n                                <MDBDataTable\r\n                                    striped\r\n                                    bordered\r\n                                    small\r\n                                    data={data}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.redirect_cerrar == true ?\r\n                            <Redirect push to={'/'}></Redirect>\r\n                            : null\r\n                        }\r\n                    </Jumbotron>\r\n                </>\r\n                :\r\n                null\r\n        );\r\n    }\r\n    EditarReigstro(Id) {\r\n        this.setState({\r\n            editar: this.state.cedis.filter(x => x.Id == Id),\r\n            show: true\r\n        }, () => {\r\n            this.state.editar.map(item => {\r\n                this.setState({\r\n                    cd: item.CD\r\n                })\r\n            }\r\n            )\r\n        })\r\n    }\r\n\r\n    EliminarCD(Id) {\r\n        this.EliminarRegistroCD(Id, localStorage.getItem(\"token\")).then(item => {\r\n            console.log(\"este es el error\", item[0].Mensaje);\r\n            if (item[0].Estatus === \"Ok\") {\r\n                Swal.fire(\r\n                    'Finalizado',\r\n                    item[0].Mensaje,\r\n                    'success'\r\n                );\r\n            }\r\n            else {\r\n                Swal.fire(\r\n                    'Error',\r\n                    item[0].Mensaje,\r\n                    'warning'\r\n                );\r\n            }\r\n\r\n            this.CargarTabla();\r\n        })\r\n    }\r\n    EliminarRegistroCD(Id, token) {\r\n        var datos = {\r\n            \"Id\": Id\r\n        };\r\n        var cedis = [];\r\n\r\n        var q1 = new Promise(function (resolve, reject) {\r\n            //const postUrl= \"https://manzana.jumex.com.mx:4438/connector_jwt/api/login/authenticate\";\r\n            const postUrl = \"http://192.168.14.68:5555/api/administrador/EliminarCD\"\r\n            fetch(postUrl, {\r\n                method: 'POST',\r\n                body: JSON.stringify(datos),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': token\r\n                }\r\n            }).then((res => res.json()))\r\n                .catch(error => console.log('Error:', error))\r\n                .then(response => {\r\n                    cedis.push(response);\r\n                    resolve(cedis);\r\n                });\r\n        });\r\n        return q1;\r\n    }\r\n\r\n    CerrarSesion() {\r\n        localStorage.clear();\r\n        this.setState({\r\n            mostrarnombre: false,\r\n            redirect_cerrar: true\r\n        })\r\n    }\r\n\r\n    OpenMenu() {\r\n        this.setState({\r\n            openmenu: true\r\n        })\r\n    }\r\n\r\n    CerrarModal() {\r\n        this.setState({ show: false })\r\n    }\r\n\r\n    AbrirModal() {\r\n        this.setState({ show: true })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"session\") == 1) {\r\n            this.setState({\r\n                mostrarnombre: true,\r\n                mostrarTabla: true,\r\n                nombreadmin: localStorage.getItem(\"nombre\")\r\n            })\r\n        }\r\n        this.CargarTabla();\r\n    }\r\n    CargarTabla() {\r\n        this.CargarDatos(localStorage.getItem(\"token\")).then(item => {\r\n            this.setState({\r\n                cedis: item[0]\r\n            }, () => { console.log('Registros', this.state.cedis) })\r\n        })\r\n    }\r\n    CargarDatos(token) {\r\n        var cedis = [];\r\n\r\n        var q1 = new Promise(function (resolve, reject) {\r\n            //const postUrl= \"https://manzana.jumex.com.mx:4438/connector_jwt/api/login/authenticate\";\r\n            const postUrl = \"http://192.168.14.68:5555/api/administrador/CargarRegistros\"\r\n            fetch(postUrl, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': token\r\n                }\r\n            }).then((res => res.json()))\r\n                .catch(error => console.log('Error:', error))\r\n                .then(response => {\r\n                    cedis.push(response);\r\n                    resolve(cedis);\r\n                });\r\n        });\r\n        return q1;\r\n    }\r\n\r\n    LlenarCampos() {\r\n\r\n\r\n        if (this.state.buscar == \"0\") {\r\n            this.setState({\r\n                responsable: '',\r\n                contacto: '',\r\n                correo: '',\r\n                telmexi1: '',\r\n                telmexi2: '',\r\n                telmexi3: '',\r\n                telmexi4: '',\r\n                telemxv1: '',\r\n                telemxv2: '',\r\n                telemxv3: '',\r\n                telemxv4: '',\r\n                cas: '',\r\n                cascontact: '',\r\n                velocidad: '',\r\n                tipo: '',\r\n                observacion: '',\r\n                direccion: ''\r\n            })\r\n        }\r\n\r\n        this.BuscarRegistro(this.state.buscar).then(result => {\r\n            console.log(\"datos\", result[0].Responsable);\r\n\r\n            if (result === undefined) {\r\n                Swal.fire(\r\n                    'Sin Datos',\r\n                    'No se han encontrado registros para',\r\n                    'warning'\r\n                );\r\n                this.setState({\r\n                    responsable: '',\r\n                    contacto: '',\r\n                    correo: '',\r\n                    telmexi1: '',\r\n                    telmexi2: '',\r\n                    telmexi3: '',\r\n                    telmexi4: '',\r\n                    telemxv1: '',\r\n                    telemxv2: '',\r\n                    telemxv3: '',\r\n                    telemxv4: '',\r\n                    cas: '',\r\n                    cascontact: '',\r\n                    velocidad: '',\r\n                    tipo: '',\r\n                    observacion: '',\r\n                    direccion: ''\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    responsable: result[0].Responsable,\r\n                    contacto: result[0].Contacto,\r\n                    correo: result[0].Correo,\r\n                    telmexi1: result[0].Linea1,\r\n                    telmexi2: result[0].Linea2,\r\n                    telmexi3: result[0].Linea3,\r\n                    telmexi4: result[0].Linea4,\r\n                    telemxv1: result[0].Voz1,\r\n                    telemxv2: result[0].Voz2,\r\n                    telemxv3: result[0].Voz3,\r\n                    telemxv4: result[0].Voz4,\r\n                    cas: result[0].Cas_Correspondiente,\r\n                    cascontact: result[0].Contacto_Cas,\r\n                    velocidad: result[0].Velocidad_Enlace,\r\n                    tipo: result[0].Tipo_Enlace,\r\n                    observacion: result[0].Referencia_Dedicado,\r\n                    direccion: result[0].Direccion,\r\n                    velocidadde: result[0].Velocidad_Dedicado,\r\n                    contactocare: result[0].Contacto_CARE\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    BuscarRegistro(Id) {\r\n        var cedis = [];\r\n\r\n        var q1 = new Promise(function (resolve, reject) {\r\n            //const postUrl= \"https://manzana.jumex.com.mx:4438/connector_jwt/api/login/authenticate\";\r\n            const postUrl = \"http://192.168.14.68:5555/api/Cedis/BuscarCedis?Id=\" + Id\r\n            fetch(postUrl, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((res => res.json()))\r\n                .catch(error => console.log('Error:', error))\r\n                .then(response => {\r\n                    cedis.push(response);\r\n                    resolve(response);\r\n                });\r\n        });\r\n        return q1;\r\n    }\r\n\r\n}","C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Editar.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Agregar.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"C:\\Users\\dmendozam\\Desktop\\proto\\arm\\src\\Map.js",["175","176","177","178","179","180"],"import React from 'react'\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { BrowserRouter, Route, Link, Redirect } from \"react-router-dom\";\r\nimport Geocode from \"react-geocode\";\r\nimport Media from 'react-media';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// import * as Constantes from '../componentes/Constantes';\r\n\r\n\r\nvar url_general = '';\r\nGeocode.setApiKey(\"AIzaSyB_Dpl0sPNY7SnumRJvxAMAhonX9Bfi_3k\");\r\nGeocode.enableDebug();\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            address: '',\r\n            city: '',\r\n            area: '',\r\n            state: '',\r\n            cp: '',\r\n            referencia: '',\r\n            mensaje: '',\r\n            mensajeError: '',\r\n            error: false,\r\n            municipio: '',\r\n            longitud: '',\r\n            latitud: '',\r\n            nocasa:'',\r\n            referencias: \"\",\r\n            mapPosition: {\r\n                lat: this.props.center.lat,\r\n                lng: this.props.center.lng\r\n            },\r\n            markerPosition: {\r\n                lat: this.props.center.lat,\r\n                lng: this.props.center.lng\r\n            }\r\n\r\n        }\r\n        this.handleChangeCalles = this.handleChangeCalles.bind(this);\r\n        this.handleChangeNoCasa = this.handleChangeNoCasa.bind(this);\r\n        this.handleChangeReferencias = this.handleChangeReferencias.bind(this);\r\n        this.handleChangeColonia = this.handleChangeColonia.bind(this);\r\n        this.handleChangeCodigo = this.handleChangeCodigo.bind(this);\r\n\r\n    }\r\n\r\n    handleChangeCalles(event) {\r\n        this.setState({ address: event.target.value }, () =>{\r\n            var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencias, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n            console.log(\"mi direccion citch\", datos);\r\n            localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n        })\r\n    }\r\n    handleChangeNoCasa(event) {\r\n        this.setState({ nocasa: event.target.value }, () => console.log(this.state.nocasa))\r\n        var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencias, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n        console.log(\"mi direccion citch\", datos);\r\n        localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n    }\r\n    handleChangeReferencias(event) {\r\n        this.setState({ referencias: event.target.value }, () => console.log(this.state.referencias))\r\n        var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencias, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n        console.log(\"mi direccion citch\", datos);\r\n        localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n    }\r\n    handleChangeColonia(event) {\r\n        this.setState({ area: event.target.value }, () => console.log(this.state.colonia))\r\n        var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencias, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n        console.log(\"mi direccion citch\", datos);\r\n        localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n    }\r\n    handleChangeCodigo(event) {\r\n        this.setState({ cp: event.target.value }, () => console.log(this.state.cp))\r\n        var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencias, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n        console.log(\"mi direccion citch\", datos);\r\n        localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n    }\r\n\r\n    /**\r\n      * Get the current address from the default map position and set those values in the state\r\n      */\r\n    componentDidMount() {\r\n        console.log(\"datos_lib\",this.state.mapPosition.lat);\r\n        Geocode.fromLatLng(this.state.mapPosition.lat, this.state.mapPosition.lng).then(\r\n            response => {\r\n                const address = response.results[0].formatted_address,\r\n                    addressArray = response.results[0].address_components,\r\n                    geometry = response.results[0].geometry.location,\r\n                    city = this.getCity(addressArray),\r\n                    area = this.getArea(addressArray),\r\n                    state = this.getState(addressArray),\r\n                    cp = this.getCP(addressArray),\r\n                    municipio = this.getMunicipio(addressArray),\r\n                    longitud = this.getLongitud(geometry),\r\n                    latitud = this.getLatitud(geometry)\r\n                    ;\r\n\r\n                console.log('city', city, area, state);\r\n\r\n                this.setState({\r\n                    address: (address) ? address : '',\r\n                    area: (area) ? area : '',\r\n                    city: (city) ? city : '',\r\n                    state: (state) ? state : '',\r\n                    cp: (cp) ? cp : '',\r\n                    municipio: (municipio) ? municipio : '',\r\n                    longitud: (longitud) ? longitud : '',\r\n                    latitud: (latitud) ? latitud : '',\r\n                    nocasa: ''\r\n                }, () => {\r\n                    var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencia, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n                    console.log(\"mi direccion citch\", datos);\r\n                    localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n                })\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    };\r\n    /**\r\n      * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\r\n      *\r\n      * @param nextProps\r\n      * @param nextState\r\n      * @return {boolean}\r\n      */\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (\r\n            this.state.markerPosition.lat !== this.props.center.lat ||\r\n            this.state.address !== nextState.address ||\r\n            this.state.city !== nextState.city ||\r\n            this.state.area !== nextState.area ||\r\n            this.state.state !== nextState.state\r\n        ) {\r\n            return true\r\n        } else if (this.props.center.lat === nextProps.center.lat) {\r\n            return false\r\n        }\r\n    }\r\n    /**\r\n      * Get the city and set the city input value to the one selected\r\n      *\r\n      * @param addressArray\r\n      * @return {string}\r\n      */\r\n    getCity = (addressArray) => {\r\n        let city = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\r\n                city = addressArray[i].long_name;\r\n                console.log('ciudad', city);\r\n                return city;\r\n            }\r\n\r\n        }\r\n    };\r\n    /**\r\n      * Get the area and set the area input value to the one selected\r\n      *\r\n      * @param addressArray\r\n      * @return {string}\r\n      */\r\n    getArea = (addressArray) => {\r\n        let area = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0]) {\r\n                for (let j = 0; j < addressArray[i].types.length; j++) {\r\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\r\n                        area = addressArray[i].long_name;\r\n                        return area;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n      * Get the address and set the address input value to the one selected\r\n      *\r\n      * @param addressArray\r\n      * @return {string}\r\n      */\r\n    getState = (addressArray) => {\r\n        let state = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            for (let i = 0; i < addressArray.length; i++) {\r\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\r\n                    state = addressArray[i].long_name;\r\n                    return state;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * \r\n     * @param addressArray\r\n     * @return {string} \r\n     */\r\n    getCP = (addressArray) => {\r\n        let cp = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] === 'postal_code') {\r\n                cp = addressArray[i].long_name;\r\n                return cp;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param geometry\r\n     * @return {string} \r\n     */\r\n    getLongitud = (geometry) => {\r\n        console.log('goemtria', geometry);\r\n        let longitud = geometry.lat;\r\n        return longitud;\r\n    }\r\n    /**\r\n     * \r\n     * @param geometry\r\n     * @return {string} \r\n     */\r\n    getLatitud = (geometry) => {\r\n        let latitud = geometry.lng;\r\n        return latitud;\r\n    }\r\n    /**\r\n     * \r\n     * @param addressArray\r\n     * @return {string} \r\n     */\r\n    getMunicipio = (addressArray) => {\r\n        let municipio = '';\r\n        for (let index = 0; index < addressArray.length; index++) {\r\n            if (addressArray[index].types[0] === 'locality') {\r\n                municipio = addressArray[index].long_name;\r\n                return municipio;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n      * And function for city,state and address input\r\n      * @param event\r\n      */\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    /**\r\n     * \r\n     * @param  event \r\n     */\r\n    handleChangeReferencia = (event) => {\r\n        this.setState({ referencia: event.target.value }, () => console.log(this.state.referencia))\r\n    }\r\n    /**\r\n      * This Event triggers when the marker window is closed\r\n      *\r\n      * @param event\r\n      */\r\n    onInfoWindowClose = (event) => {\r\n    };\r\n    /**\r\n      * When the user types an address in the search box\r\n      * @param place\r\n      */\r\n    onPlaceSelected = (place) => {\r\n        const address = place.formatted_address,\r\n            addressArray = place.address_components,\r\n            geometry = place.geometry.location,\r\n            city = this.getCity(addressArray),\r\n            area = this.getArea(addressArray),\r\n            state = this.getState(addressArray),\r\n            cp = this.getCP(addressArray),\r\n            longitud = this.getLongitud(geometry),\r\n            latitud = this.getLatitud(geometry),\r\n            municipio = this.getMunicipio(addressArray),\r\n            latValue = place.geometry.location.lat(),\r\n            lngValue = place.geometry.location.lng();\r\n        // Set these values in the state.\r\n        this.setState({\r\n            address: (address) ? address : '',\r\n            area: (area) ? area : '',\r\n            city: (city) ? city : '',\r\n            state: (state) ? state : '',\r\n            cp: (cp) ? cp : '',\r\n            longitud: (longitud) ? longitud : '',\r\n            latitud: (latitud) ? latitud : '',\r\n            municipio: (municipio) ? municipio : '',\r\n            nocasa:'',\r\n            markerPosition: {\r\n                lat: latValue,\r\n                lng: lngValue\r\n            },\r\n            mapPosition: {\r\n                lat: latValue,\r\n                lng: lngValue\r\n            },\r\n        }, () => {\r\n            localStorage.removeItem(\"insertar_direccion\");\r\n            var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencia, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n            console.log(\"mi direccion citch\", datos);\r\n            localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n        })\r\n    };\r\n    /**\r\n      * When the marker is dragged you get the lat and long using the functions available from event object.\r\n      * Use geocode to get the address, city, area and state from the lat and lng positions.\r\n      * And then set those values in the state.\r\n      *\r\n      * @param event\r\n      */\r\n    onMarkerDragEnd = (event) => {\r\n        console.log('event', event);\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng(),\r\n            addressArray = [];\r\n        Geocode.fromLatLng(newLat, newLng).then(\r\n            response => {\r\n                const address = response.results[0].formatted_address,\r\n                    addressArray = response.results[0].address_components,\r\n                    geometry = response.results[0].geometry.location,\r\n                    city = this.getCity(addressArray),\r\n                    area = this.getArea(addressArray),\r\n                    state = this.getState(addressArray),\r\n                    cp = this.getCP(addressArray),\r\n                    longitud = this.getLongitud(geometry),\r\n                    latitud = this.getLatitud(geometry),\r\n                    municipio = this.getMunicipio(addressArray);\r\n                this.setState({\r\n                    address: (address) ? address : '',\r\n                    area: (area) ? area : '',\r\n                    city: (city) ? city : '',\r\n                    state: (state) ? state : '',\r\n                    cp: (cp) ? cp : '',\r\n                    longitud: (longitud) ? longitud : '',\r\n                    latitud: (latitud) ? latitud : '',\r\n                    municipio: (municipio) ? municipio : '',\r\n                }, () => {\r\n                    localStorage.removeItem(\"insertar_direccion\");\r\n                    var datos = { \"Direccion\": this.state.address+\", Casa/Depto: \"+this.state.nocasa, \"Municipio\": this.state.municipio, \"CP\": this.state.cp, \"Estado\": this.state.state, \"Colonia\": this.state.area, \"Referencia\": this.state.referencia, \"Longitud\": this.state.longitud.toString(), \"Latitud\": this.state.latitud.toString() }\r\n                    console.log(\"mi direccion citch\", datos);\r\n                    localStorage.setItem('insertar_direccion', JSON.stringify(datos));\r\n                })\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    };\r\n    render() {\r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap google={this.props.google}\r\n                        defaultZoom={this.props.zoom}\r\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n                    >\r\n                        {/* For Auto complete Search Box */}\r\n                        <Media queries={{ small: { maxWidth: 480 } }}>\r\n                            {matches =>\r\n                                matches.small ? (\r\n                                    <Autocomplete\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            height: '40px',\r\n                                            paddingLeft: '16px',\r\n                                            marginTop: '2px',\r\n                                            marginBottom: '100px',\r\n                                            position: 'absolute',\r\n                                            top: 72\r\n                                        }}\r\n                                        onPlaceSelected={this.onPlaceSelected}\r\n                                        types={['geocode']}\r\n                                        componentRestrictions={{ country: \"mx\" }}\r\n                                    />\r\n                                )\r\n                                    : (\r\n                                        <Autocomplete\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '40px',\r\n                                                paddingLeft: '16px',\r\n                                                marginTop: '2px',\r\n                                                // marginBottom: '100px',\r\n                                                // position:'absolute',\r\n                                                // top:72\r\n                                             \r\n\r\n                                            }}\r\n                                            onPlaceSelected={this.onPlaceSelected}\r\n                                            types={['geocode']}\r\n                                            componentRestrictions={{ country: \"mx\" }}\r\n                                        />\r\n                                    )\r\n                            }\r\n                        </Media>\r\n                        {/*Marker*/}\r\n                        <Marker google={this.props.google}\r\n                            name={'Dolores park'}\r\n                            draggable={true}\r\n                            onDragEnd={this.onMarkerDragEnd}\r\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n                        />\r\n                        <Marker />\r\n                        {/* InfoWindow on top of marker */}\r\n                        <InfoWindow\r\n                            onClose={this.onInfoWindowClose}\r\n                            position={{ lat: (this.state.markerPosition.lat + 0.0018), lng: this.state.markerPosition.lng }}\r\n                        >\r\n                            <div>\r\n                                <span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n        let map;\r\n        if (this.props.center.lat !== undefined) {\r\n            map = <div>\r\n                <div>\r\n                    {/* <div className=\"form-group\">\r\n       <label htmlFor=\"\">Ciudad</label>\r\n       <input type=\"text\" name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\r\n      </div> */}\r\n                    <AsyncMap\r\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB_Dpl0sPNY7SnumRJvxAMAhonX9Bfi_3k&libraries=places\"\r\n                        loadingElement={\r\n                            <div style={{ height: `100%` }} />\r\n                        }\r\n                        containerElement={\r\n                            <div style={{ height: this.props.height }} />\r\n                        }\r\n                        mapElement={\r\n                            <div style={{ height: `100%` }} />\r\n                        }\r\n                    />\r\n\r\n                    <Media queries={{ small: { maxWidth: 480 } }}>\r\n\r\n                        {matches =>\r\n                            matches.small ? (\r\n                                null\r\n                            )\r\n                                : (\r\n                                    <>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"\">Dirección</label>\r\n                                            <input type=\"text\" name=\"area\" className=\"form-control\" onChange={this.handleChangeCalles} value={this.state.address} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" name=\"area\" className=\"form-control\" onChange={this.handleChangeColonia} value={this.state.area} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" name=\"area\" className=\"form-control\" onChange={this.handleChangeCodigo} value={this.state.cp} />\r\n                                        </div>\r\n                                        <Button variant=\"contained\" style={{ width: '100%', backgroundColor: 'red' }} onClick={() => this.IniciarSesion()} >Ingresar</Button>\r\n                                    </>\r\n                                )\r\n                        }\r\n\r\n                    </Media>\r\n\r\n                    {/* <div className=\"form-group\" style={{marginTop:60}}>\r\n       <label htmlFor=\"\">Colonia</label>\r\n       <input type=\"text\" name=\"area\" className=\"form-control\" onChange={ this.onChange } value={ this.state.area }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">Estado</label>\r\n       <input type=\"text\" name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">Dirección</label>\r\n       <input type=\"text\" name=\"address\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.address }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label htmlFor=\"\">Referencia</label>\r\n          <textarea type=\"text\" name=\"\" className=\"form-control\" onChange={ this.handleChangeReferencia } ></textarea>\r\n      </div> */}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        } else {\r\n            map = <div style={{ height: this.props.height, marginTop: 50 }} />\r\n        }\r\n        return (\r\n            <Route>\r\n                {map}\r\n\r\n            </Route>\r\n        )\r\n    }\r\n\r\n    ValidarDireccion() {\r\n        var token = localStorage.getItem(\"token\");\r\n        this.RegistrarDireccion(token).then(item => {\r\n            this.setState({\r\n                mensaje: item\r\n            }, () => {\r\n                if (this.state.mensaje.Estatus == \"OK\") {\r\n                    this.ProcesoInicial(token);\r\n                    this.setState({\r\n                        mostrar: false,\r\n                        mostrarError: false\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        error: true,\r\n                        mensajeError: this.state.mensaje.Mensaje\r\n                    }, () => {\r\n                        console.log('mensaje direccion', this.state.mensajeError);\r\n                    })\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n    RegistrarDireccion(token) {\r\n        var pro;\r\n        const data = {\r\n            \"Direccion\": this.state.address,\r\n            \"Municipio\": this.state.city,\r\n            \"CP\": this.state.cp,\r\n            \"Estado\": this.state.state,\r\n            \"Colonia\": this.state.area,\r\n            \"Referencia\": this.state.referencia\r\n        };\r\n        console.log(\"mi array\", data);\r\n        const posturl = url_general + \"api/Usuario/direccion/agregar\";\r\n        var result = new Promise(function (resolve, reject) {\r\n            fetch(posturl, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            }).then(\r\n                (res) => res.json()\r\n            )\r\n                .catch(error => console.log('Error', error))\r\n                .then(resp => {\r\n\r\n                    resolve(resp);\r\n                });\r\n\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\nexport default Map",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":12},{"ruleId":"185","severity":1,"message":"189","line":8,"column":10,"nodeType":"187","messageId":"188","endLine":8,"endColumn":23},{"ruleId":"185","severity":1,"message":"190","line":8,"column":32,"nodeType":"187","messageId":"188","endLine":8,"endColumn":36},{"ruleId":"185","severity":1,"message":"189","line":32,"column":10,"nodeType":"187","messageId":"188","endLine":32,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":126,"column":33,"nodeType":"193","endLine":126,"endColumn":87},{"ruleId":"191","severity":1,"message":"192","line":127,"column":33,"nodeType":"193","endLine":127,"endColumn":90},{"ruleId":"194","severity":1,"message":"195","line":141,"column":37,"nodeType":"193","endLine":141,"endColumn":83},{"ruleId":"191","severity":1,"message":"192","line":156,"column":33,"nodeType":"193","endLine":156,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":162,"column":33,"nodeType":"193","endLine":162,"endColumn":89},{"ruleId":"191","severity":1,"message":"192","line":168,"column":33,"nodeType":"193","endLine":168,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":179,"column":33,"nodeType":"193","endLine":179,"endColumn":106},{"ruleId":"191","severity":1,"message":"192","line":196,"column":33,"nodeType":"193","endLine":196,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":213,"column":33,"nodeType":"193","endLine":213,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":219,"column":33,"nodeType":"193","endLine":219,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":225,"column":33,"nodeType":"193","endLine":225,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":231,"column":33,"nodeType":"193","endLine":231,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":242,"column":33,"nodeType":"193","endLine":242,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":248,"column":33,"nodeType":"193","endLine":248,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":254,"column":33,"nodeType":"193","endLine":254,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":263,"column":33,"nodeType":"193","endLine":263,"endColumn":108},{"ruleId":"196","severity":1,"message":"197","line":266,"column":32,"nodeType":"193","endLine":266,"endColumn":126},{"ruleId":"191","severity":1,"message":"192","line":269,"column":33,"nodeType":"193","endLine":269,"endColumn":110},{"ruleId":"185","severity":1,"message":"198","line":323,"column":13,"nodeType":"187","messageId":"188","endLine":323,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":362,"column":45,"nodeType":"201","messageId":"202","endLine":362,"endColumn":47},{"ruleId":"199","severity":1,"message":"200","line":399,"column":31,"nodeType":"201","messageId":"202","endLine":399,"endColumn":33},{"ruleId":"185","severity":1,"message":"203","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"204","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":17},{"ruleId":"185","severity":1,"message":"205","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":11},{"ruleId":"185","severity":1,"message":"206","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":11},{"ruleId":"185","severity":1,"message":"207","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":12},{"ruleId":"185","severity":1,"message":"208","line":9,"column":8,"nodeType":"187","messageId":"188","endLine":9,"endColumn":14},{"ruleId":"185","severity":1,"message":"209","line":10,"column":8,"nodeType":"187","messageId":"188","endLine":10,"endColumn":13},{"ruleId":"185","severity":1,"message":"210","line":11,"column":8,"nodeType":"187","messageId":"188","endLine":11,"endColumn":15},{"ruleId":"185","severity":1,"message":"211","line":15,"column":8,"nodeType":"187","messageId":"188","endLine":15,"endColumn":16},{"ruleId":"185","severity":1,"message":"212","line":16,"column":8,"nodeType":"187","messageId":"188","endLine":16,"endColumn":14},{"ruleId":"185","severity":1,"message":"213","line":17,"column":8,"nodeType":"187","messageId":"188","endLine":17,"endColumn":13},{"ruleId":"185","severity":1,"message":"214","line":18,"column":8,"nodeType":"187","messageId":"188","endLine":18,"endColumn":13},{"ruleId":"185","severity":1,"message":"215","line":19,"column":8,"nodeType":"187","messageId":"188","endLine":19,"endColumn":17},{"ruleId":"185","severity":1,"message":"216","line":23,"column":10,"nodeType":"187","messageId":"188","endLine":23,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":79,"column":21,"nodeType":"193","endLine":79,"endColumn":94},{"ruleId":"191","severity":1,"message":"192","line":93,"column":58,"nodeType":"193","endLine":93,"endColumn":99},{"ruleId":"191","severity":1,"message":"192","line":99,"column":58,"nodeType":"193","endLine":99,"endColumn":100},{"ruleId":"191","severity":1,"message":"192","line":105,"column":58,"nodeType":"193","endLine":105,"endColumn":100},{"ruleId":"196","severity":1,"message":"197","line":114,"column":21,"nodeType":"193","endLine":114,"endColumn":115},{"ruleId":"191","severity":1,"message":"192","line":115,"column":58,"nodeType":"193","endLine":115,"endColumn":105},{"ruleId":"199","severity":1,"message":"200","line":158,"column":31,"nodeType":"201","messageId":"202","endLine":158,"endColumn":33},{"ruleId":"185","severity":1,"message":"207","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":12},{"ruleId":"185","severity":1,"message":"208","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"209","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":13},{"ruleId":"185","severity":1,"message":"210","line":9,"column":8,"nodeType":"187","messageId":"188","endLine":9,"endColumn":15},{"ruleId":"185","severity":1,"message":"217","line":10,"column":8,"nodeType":"187","messageId":"188","endLine":10,"endColumn":14},{"ruleId":"185","severity":1,"message":"218","line":11,"column":8,"nodeType":"187","messageId":"188","endLine":11,"endColumn":15},{"ruleId":"185","severity":1,"message":"219","line":12,"column":8,"nodeType":"187","messageId":"188","endLine":12,"endColumn":15},{"ruleId":"185","severity":1,"message":"211","line":13,"column":8,"nodeType":"187","messageId":"188","endLine":13,"endColumn":16},{"ruleId":"185","severity":1,"message":"212","line":14,"column":8,"nodeType":"187","messageId":"188","endLine":14,"endColumn":14},{"ruleId":"185","severity":1,"message":"213","line":16,"column":8,"nodeType":"187","messageId":"188","endLine":16,"endColumn":13},{"ruleId":"185","severity":1,"message":"214","line":17,"column":8,"nodeType":"187","messageId":"188","endLine":17,"endColumn":13},{"ruleId":"185","severity":1,"message":"215","line":18,"column":8,"nodeType":"187","messageId":"188","endLine":18,"endColumn":17},{"ruleId":"185","severity":1,"message":"220","line":19,"column":8,"nodeType":"187","messageId":"188","endLine":19,"endColumn":18},{"ruleId":"185","severity":1,"message":"189","line":36,"column":10,"nodeType":"187","messageId":"188","endLine":36,"endColumn":23},{"ruleId":"185","severity":1,"message":"221","line":36,"column":25,"nodeType":"187","messageId":"188","endLine":36,"endColumn":30},{"ruleId":"185","severity":1,"message":"222","line":37,"column":10,"nodeType":"187","messageId":"188","endLine":37,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":128,"column":57,"nodeType":"193","endLine":128,"endColumn":88},{"ruleId":"191","severity":1,"message":"192","line":129,"column":27,"nodeType":"193","endLine":129,"endColumn":101},{"ruleId":"191","severity":1,"message":"192","line":213,"column":37,"nodeType":"193","endLine":213,"endColumn":94},{"ruleId":"194","severity":1,"message":"195","line":221,"column":37,"nodeType":"193","endLine":221,"endColumn":83},{"ruleId":"191","severity":1,"message":"192","line":238,"column":41,"nodeType":"193","endLine":238,"endColumn":79},{"ruleId":"199","severity":1,"message":"200","line":249,"column":53,"nodeType":"201","messageId":"202","endLine":249,"endColumn":55},{"ruleId":"199","severity":1,"message":"200","line":261,"column":55,"nodeType":"201","messageId":"202","endLine":261,"endColumn":57},{"ruleId":"223","severity":1,"message":"224","line":264,"column":40,"nodeType":"225","messageId":"226","endLine":264,"endColumn":42},{"ruleId":"199","severity":1,"message":"200","line":344,"column":45,"nodeType":"201","messageId":"202","endLine":344,"endColumn":47},{"ruleId":"199","severity":1,"message":"200","line":385,"column":31,"nodeType":"201","messageId":"202","endLine":385,"endColumn":33},{"ruleId":"185","severity":1,"message":"220","line":19,"column":8,"nodeType":"187","messageId":"188","endLine":19,"endColumn":18},{"ruleId":"185","severity":1,"message":"227","line":21,"column":8,"nodeType":"187","messageId":"188","endLine":21,"endColumn":13},{"ruleId":"185","severity":1,"message":"189","line":34,"column":10,"nodeType":"187","messageId":"188","endLine":34,"endColumn":23},{"ruleId":"185","severity":1,"message":"228","line":35,"column":10,"nodeType":"187","messageId":"188","endLine":35,"endColumn":23},{"ruleId":"185","severity":1,"message":"229","line":35,"column":25,"nodeType":"187","messageId":"188","endLine":35,"endColumn":34},{"ruleId":"185","severity":1,"message":"230","line":35,"column":36,"nodeType":"187","messageId":"188","endLine":35,"endColumn":48},{"ruleId":"185","severity":1,"message":"231","line":35,"column":50,"nodeType":"187","messageId":"188","endLine":35,"endColumn":60},{"ruleId":"185","severity":1,"message":"232","line":35,"column":62,"nodeType":"187","messageId":"188","endLine":35,"endColumn":68},{"ruleId":"185","severity":1,"message":"233","line":36,"column":8,"nodeType":"187","messageId":"188","endLine":36,"endColumn":20},{"ruleId":"185","severity":1,"message":"234","line":38,"column":8,"nodeType":"187","messageId":"188","endLine":38,"endColumn":9},{"ruleId":"185","severity":1,"message":"235","line":45,"column":7,"nodeType":"187","messageId":"188","endLine":45,"endColumn":21},{"ruleId":"191","severity":1,"message":"192","line":319,"column":33,"nodeType":"193","endLine":319,"endColumn":87},{"ruleId":"191","severity":1,"message":"192","line":321,"column":37,"nodeType":"193","endLine":321,"endColumn":94},{"ruleId":"194","severity":1,"message":"195","line":331,"column":37,"nodeType":"193","endLine":331,"endColumn":83},{"ruleId":"191","severity":1,"message":"192","line":346,"column":33,"nodeType":"193","endLine":346,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":352,"column":33,"nodeType":"193","endLine":352,"endColumn":89},{"ruleId":"191","severity":1,"message":"192","line":358,"column":33,"nodeType":"193","endLine":358,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":369,"column":33,"nodeType":"193","endLine":369,"endColumn":106},{"ruleId":"191","severity":1,"message":"192","line":386,"column":33,"nodeType":"193","endLine":386,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":403,"column":33,"nodeType":"193","endLine":403,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":409,"column":33,"nodeType":"193","endLine":409,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":415,"column":33,"nodeType":"193","endLine":415,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":421,"column":33,"nodeType":"193","endLine":421,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":432,"column":33,"nodeType":"193","endLine":432,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":438,"column":33,"nodeType":"193","endLine":438,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":444,"column":33,"nodeType":"193","endLine":444,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":453,"column":33,"nodeType":"193","endLine":453,"endColumn":108},{"ruleId":"199","severity":1,"message":"200","line":515,"column":46,"nodeType":"201","messageId":"202","endLine":515,"endColumn":48},{"ruleId":"199","severity":1,"message":"200","line":519,"column":53,"nodeType":"201","messageId":"202","endLine":519,"endColumn":55},{"ruleId":"199","severity":1,"message":"200","line":541,"column":40,"nodeType":"201","messageId":"202","endLine":541,"endColumn":42},{"ruleId":"199","severity":1,"message":"200","line":653,"column":45,"nodeType":"201","messageId":"202","endLine":653,"endColumn":47},{"ruleId":"199","severity":1,"message":"200","line":713,"column":31,"nodeType":"201","messageId":"202","endLine":713,"endColumn":33},{"ruleId":"185","severity":1,"message":"220","line":19,"column":8,"nodeType":"187","messageId":"188","endLine":19,"endColumn":18},{"ruleId":"185","severity":1,"message":"227","line":21,"column":8,"nodeType":"187","messageId":"188","endLine":21,"endColumn":13},{"ruleId":"185","severity":1,"message":"189","line":33,"column":10,"nodeType":"187","messageId":"188","endLine":33,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":198,"column":33,"nodeType":"193","endLine":198,"endColumn":87},{"ruleId":"191","severity":1,"message":"192","line":200,"column":37,"nodeType":"193","endLine":200,"endColumn":94},{"ruleId":"194","severity":1,"message":"195","line":210,"column":37,"nodeType":"193","endLine":210,"endColumn":83},{"ruleId":"191","severity":1,"message":"192","line":225,"column":33,"nodeType":"193","endLine":225,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":231,"column":33,"nodeType":"193","endLine":231,"endColumn":89},{"ruleId":"191","severity":1,"message":"192","line":237,"column":33,"nodeType":"193","endLine":237,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":248,"column":33,"nodeType":"193","endLine":248,"endColumn":106},{"ruleId":"191","severity":1,"message":"192","line":265,"column":33,"nodeType":"193","endLine":265,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":282,"column":33,"nodeType":"193","endLine":282,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":288,"column":33,"nodeType":"193","endLine":288,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":294,"column":33,"nodeType":"193","endLine":294,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":300,"column":33,"nodeType":"193","endLine":300,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":311,"column":33,"nodeType":"193","endLine":311,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":317,"column":33,"nodeType":"193","endLine":317,"endColumn":107},{"ruleId":"191","severity":1,"message":"192","line":323,"column":33,"nodeType":"193","endLine":323,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":332,"column":33,"nodeType":"193","endLine":332,"endColumn":108},{"ruleId":"199","severity":1,"message":"200","line":342,"column":46,"nodeType":"201","messageId":"202","endLine":342,"endColumn":48},{"ruleId":"199","severity":1,"message":"200","line":346,"column":54,"nodeType":"201","messageId":"202","endLine":346,"endColumn":56},{"ruleId":"199","severity":1,"message":"200","line":447,"column":45,"nodeType":"201","messageId":"202","endLine":447,"endColumn":47},{"ruleId":"199","severity":1,"message":"200","line":480,"column":31,"nodeType":"201","messageId":"202","endLine":480,"endColumn":33},{"ruleId":"185","severity":1,"message":"189","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":23},{"ruleId":"185","severity":1,"message":"190","line":4,"column":32,"nodeType":"187","messageId":"188","endLine":4,"endColumn":36},{"ruleId":"185","severity":1,"message":"236","line":4,"column":38,"nodeType":"187","messageId":"188","endLine":4,"endColumn":46},{"ruleId":"185","severity":1,"message":"237","line":321,"column":13,"nodeType":"187","messageId":"188","endLine":321,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":506,"column":48,"nodeType":"201","messageId":"202","endLine":506,"endColumn":50},{"ruleId":"185","severity":1,"message":"238","line":526,"column":13,"nodeType":"187","messageId":"188","endLine":526,"endColumn":16},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'token' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Jumbotron' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'home' is defined but never used.","'perfil' is defined but never used.","'whats' is defined but never used.","'outlook' is defined but never used.","'telefono' is defined but never used.","'lector' is defined but never used.","'cobre' is defined but never used.","'libro' is defined but never used.","'ubicacion' is defined but never used.","'useForm' is defined but never used.","'telmex' is defined but never used.","'telmex2' is defined but never used.","'casetel' is defined but never used.","'grupojumex' is defined but never used.","'Route' is defined but never used.","'DataGrid' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'withGoogleMap' is defined but never used.","'GoogleMap' is defined but never used.","'withScriptjs' is defined but never used.","'InfoWindow' is defined but never used.","'Marker' is defined but never used.","'Autocomplete' is defined but never used.","'$' is defined but never used.","'modalMapStyles' is assigned a value but never used.","'Redirect' is defined but never used.","'addressArray' is assigned a value but never used.","'pro' is defined but never used.","no-global-assign","no-unsafe-negation"]